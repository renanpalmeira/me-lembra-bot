{"version":3,"sources":["App.js","index.js"],"names":["theme","background","fontFamily","headerBgColor","headerFontColor","headerFontSize","botBubbleColor","botFontColor","userBubbleColor","userFontColor","steps","id","message","trigger","user","validator","value","isNaN","parseInt","end","sendToBackEnd","a","values","name","phoneNumber","minutes","console","log","axios","post","phone_number","replace","reminder_in_minutes","response","error","App","handleEnd","placeholder","headerTitle","userAvatar","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAMMA,EAAQ,CACZC,WAAY,UACZC,WAAY,iBACZC,cAAe,UACfC,gBAAiB,OACjBC,eAAgB,OAChBC,eAAgB,UAChBC,aAAc,OACdC,gBAAiB,OACjBC,cAAe,WAGXC,EAAQ,CACZ,CACEC,GAAI,IACJC,QAAS,sDACTC,QAAS,KAEX,CACEF,GAAI,IACJG,MAAM,EACND,QAAS,KAEX,CACEF,GAAI,IACJC,QAAS,qFACTC,QAAS,KAEX,CACEF,GAAI,IACJG,MAAM,EACNC,UAAW,SAACC,GACV,QAAKD,IAAUC,IACN,oEAKXH,QAAS,KAEX,CACEF,GAAI,IACJC,QAAS,wEACTC,QAAS,KAEX,CACEF,GAAI,IACJG,MAAM,EACND,QAAS,KAEX,CACEF,GAAI,IACJC,QAAS,oFACTC,QAAS,KAEX,CACEF,GAAI,IACJG,MAAM,EACNC,UAAW,SAACC,GACV,OAAIC,MAAMD,GACD,kCAGLE,SAASF,GAAS,GACb,4CAGLE,SAASF,IAAU,IACd,sCAKXH,QAAS,KAEX,CACEF,GAAI,IACJC,QAAS,kEACTO,KAAK,I,SAIMC,E,8EAAf,yCAAAC,EAAA,+DAA+BX,MAAOY,EAAtC,EAAsCA,OAAtC,cACgDA,EADhD,GACSC,EADT,KACeC,EADf,KAC4BZ,EAD5B,KACqCa,EADrC,KAEEC,QAAQC,IAAIJ,EAAMC,EAAaZ,EAASa,GAF1C,kBAK2BG,IAAMC,KAAN,eAA2B,CAChDN,KAAMA,EACNO,aAAcN,EAAYO,QAAQ,MAAO,IACzCnB,QAASA,EACToB,oBAAqBd,SAASO,KATpC,OAKUQ,EALV,OAYIP,QAAQC,IAAIM,GAZhB,kDAcIP,QAAQQ,MAAR,MAdJ,2D,sBA2BeC,MARf,WACE,OACE,cAAC,gBAAD,CAAenC,MAAOA,EAAtB,SACE,cAAC,IAAD,CAASoC,UAAWhB,EAAeiB,YAAY,yBAAyBC,YAAY,iBAAiB5B,MAAOA,EAAO6B,WAAW,0FC1GpIC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6a5fc11a.chunk.js","sourcesContent":["import ChatBot from 'react-simple-chatbot'\nimport axios from 'axios'\nimport validator from \"validar-telefone\"\nimport { ThemeProvider } from 'styled-components'\n\n// all available props\nconst theme = {\n  background: '#f5f8fb',\n  fontFamily: 'Helvetica Neue',\n  headerBgColor: '#EF6C00',\n  headerFontColor: '#fff',\n  headerFontSize: '15px',\n  botBubbleColor: '#EF6C00',\n  botFontColor: '#fff',\n  userBubbleColor: '#fff',\n  userFontColor: '#4a4a4a',\n}\n\nconst steps = [\n  {\n    id: '1',\n    message: 'Olá Olá, sou o Me lembra bot!, qual seu nome?',\n    trigger: '2',\n  },\n  {\n    id: '2',\n    user: true,\n    trigger: '3',\n  },\n  {\n    id: '3',\n    message: 'Boa {previousValue}, muito legal seu nome! agora me fala seu número de celular!',\n    trigger: '4',\n  },\n  {\n    id: '4',\n    user: true,\n    validator: (value) => {\n      if (!validator(value)) {\n        return 'número inválido, confira novamente não esqueça do DD'\n      }\n\n      return true\n    },\n    trigger: '5',\n  },\n  {\n    id: '5',\n    message: 'Boa estamos quase no fim, me fala! o recado que você quer lembrar?',\n    trigger: '6',\n  },\n  {\n    id: '6',\n    user: true,\n    trigger: '7',\n  },\n  {\n    id: '7',\n    message: 'Quando você quer que eu te lembre disso (para me ajudar, escreva em minutos) ?',\n    trigger: '8',\n  },\n  {\n    id: '8',\n    user: true,\n    validator: (value) => {\n      if (isNaN(value)) {\n        return 'apenas números e em minutos!';\n      }\n\n      if (parseInt(value) > 20) {\n        return 'ainda não consigo lembrar tudo isso!';\n      }\n\n      if (parseInt(value) <= 0) {\n        return 'muito pouco tempo, aumente ai rsrs';\n      }\n\n      return true\n    },\n    trigger: '9',\n  },\n  {\n    id: '9',\n    message: 'Perfeito! Me lembra Bot! vai te lembrar disso no tempo correto!',\n    end: true,\n  },\n]\n\nasync function sendToBackEnd({ steps, values }) {\n  const [name, phoneNumber, message, minutes] = values\n  console.log(name, phoneNumber, message, minutes);\n\n  try {\n    const response = await axios.post(`/reminder-me`, {\n      name: name,\n      phone_number: phoneNumber.replace(/\\D/g, \"\"),\n      message: message, \n      reminder_in_minutes: parseInt(minutes),\n    })\n    \n    console.log(response);\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <ChatBot handleEnd={sendToBackEnd} placeholder=\"Digite uma mensagem...\" headerTitle=\"Me lembra Bot!\" steps={steps} userAvatar=\"https://logospng.org/download/cruzeiro-do-sul/logo-cruzeiro-do-sul-estrela-256.png\"/>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}